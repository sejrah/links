##########################
#Jenkins docker setup
##########################
#Official Jenkins Docker Image: #https://github.com/jenkinsci/docker/blob/master/README.md
#
#What is Build Executors
#What does "volume" holds
#configuration, inital secret, plugins, workspace(s), everything...
#Why would you run jenkins behind nginx?

#Best practices:
#Detach and attach volume to another container for upgrdes


#Created volume - <volumne name> - from latest jenkins snapshot (id=<snapshotid>; date=April 18, 2018)
#Tagged new volume with Environment=Development; JPA=Other; Program=Shared Services

#Login to EC2 (Cloud9) and list all available disks (to verify that volume has been attached)
lsblk

#Check if the volume has any data 
sudo file -s /dev/xvdf

#Format volume to ext4 filesystem (it was windows mounted volume)
sudo mkfs -t ext4 /dev/xvdf

#Make directory "jenkinsvolume"
sudo mkdir /jenkinsvolume

#Mount volume to "jenkinsvolume"
sudo mount /dev/xvdf /jenkinsvolume/

#Mount volume to "jenkinsvolume"
sudo unmount /dev/xvdf

#Check disk space for conforming the volume mount
cd /jenkinsvolume
df -h .

#Make USER 1000 (jenkins) as owner of "jenkinsvolume"
sudo chown 1000 jenkinsvolume

#Docker run...
#If you want to attach build slave servers through JNLP (Java Web Start), map port 50000:50000; which will be used when you connect a slave agent
#docker run -d -p 49001:8080 -v /jenkinsvolume:/var/jenkins_home:z -t jenkins
#docker run -d -p 8080:8080 -p 50000:50000 -v /jenkinsvolume:/var/jenkins_home:z -t jenkins/jenkins:lts
#docker run -d -p 8080:8080 -v /jenkinsvolume:/var/jenkins_home:z -t jenkins/jenkins:lts

docker run -d -p 8080:8080 --env JAVA_OPTS="-Djava.util.logging.config.file=/var/jenkins_home/log.properties" -v /jenkinsvolume:/var/jenkins_home:z -t jenkins/jenkins:lts

#Check logs
#docker ps -a
#CONTAINER_ID=394ba79b02e3
#docker logs <CONTAINER_ID>
#logs shows initial admin password

#Get admin password
sudo cat /jenkinsvolume/secrets/initialAdminPassword

#Browse to home page
elinks http://localhost:49001


docker build -t jenkins-master .
docker build -t nginx-jenkins .

============================================================================
mkdir $PWD/jenkins
chown 1000 $PWD/jenkins
docker run -d -p 49001:8080 -v $PWD/jenkins:/var/jenkins_home:z -t jenkins
elinks ---> http://localhost:49001


cd /home/ec2-user
mkdir DockerJenkins
cd DockerJenkins
mkdir jenkins-data
mkdir jenkins-master
mkdir nginx

touch docker-compose.yml
cd jenkins-data/
touch Dockerfile
cd ../jenkins-master
touch Dockerfile
cd ../nginx/
mkdir conf.d
mkdir ssl
mkdir logs
touch default.conf
cd conf.d/
touch jenkins.conf
cd ../logs
touch access.log
touch error.log


# cd ~/DockerJenkins/jenkins-data
vi Dockerfile
FROM ubuntu:16.04
RUN useradd -d "/var/jenkins_home" -u 1000 -m -s /bin/bash jenkins
RUN mkdir -p /var/log/jenkins
RUN chown -R jenkins:jenkins /var/log/jenkins
VOLUME ["/var/log/jenkins", "/var/jenkins_home"] USER jenkins
CMD ["echo", "Data container for Jenkins"]

~/DockerJenkins/jenkins-data# docker build .
Sending build context to Docker daemon  2.048kB
Step 1/6 : FROM ubuntu:16.04
16.04: Pulling from library/ubuntu
3b37166ec614: Pull complete 
504facff238f: Pull complete 
ebbcacd28e10: Pull complete 
c7fb3351ecad: Pull complete 
2e3debadcbf7: Pull complete 
Digest: sha256:45ddfa61744947b0b8f7f20b8de70cbcdd441a6a0532f791fd4c09f5e491a8eb
Status: Downloaded newer image for ubuntu:16.04
 ---> b9e15a5d1e1a
Step 2/6 : RUN useradd -d "/var/jenkins_home" -u 1000 -m -s /bin/bash jenkins
 ---> Running in d6053ba8e385
Removing intermediate container d6053ba8e385
 ---> f203d184abf4
Step 3/6 : RUN mkdir -p /var/log/jenkins
 ---> Running in b0c998636974
Removing intermediate container b0c998636974
 ---> 7f52cd140325
Step 4/6 : RUN chown -R jenkins:jenkins /var/log/jenkins
 ---> Running in 154701a31878
Removing intermediate container 154701a31878
 ---> 8abe110f0324
Step 5/6 : VOLUME ["/var/log/jenkins", "/var/jenkins_home"] USER jenkins
 ---> Running in 75a5fd5ecb8f
Removing intermediate container 75a5fd5ecb8f
 ---> 2fec29d18085
Step 6/6 : CMD ["echo", "Data container for Jenkins"]
 ---> Running in 16d026f0ca71
Removing intermediate container 16d026f0ca71
 ---> c14dd38f9fd8
Successfully built c14dd38f9fd8




# cd ~/DockerJenkins/jenkins-master
~/DockerJenkins/jenkins-master# vi Dockerfile
FROM jenkins
USER root
RUN mkdir /var/log/jenkins
RUN mkdir /var/cache/jenkins
RUN chown -R jenkins:jenkins /var/log/jenkins
RUN chown -R jenkins:jenkins /var/cache/jenkins
USER jenkins
ENV JAVA_OPTS="-Xmx8192m"
ENV JENKINS_OPTS="--handlerCountStartup=100 --handlerCountMax=300 --logfile=/var/log/jenkins/jenkins.log  --webroot=/var/cache/jenkins/war"


~/DockerJenkins/jenkins-master# docker build .
Sending build context to Docker daemon  2.048kB
Step 1/9 : FROM jenkins
 ---> cd14cecfdb3a
Step 2/9 : USER root
 ---> Running in c46e1aa72091
Removing intermediate container c46e1aa72091
 ---> 1cfed82b1efd
Step 3/9 : RUN mkdir /var/log/jenkins
 ---> Running in fcc39503fc38
Removing intermediate container fcc39503fc38
 ---> 8250269f9b92
Step 4/9 : RUN mkdir /var/cache/jenkins
 ---> Running in c0e73b99c038
Removing intermediate container c0e73b99c038
 ---> eab072873870
Step 5/9 : RUN chown -R jenkins:jenkins /var/log/jenkins
 ---> Running in 5a3db76e5e22
Removing intermediate container 5a3db76e5e22
 ---> 0ed1e5a530e4
Step 6/9 : RUN chown -R jenkins:jenkins /var/cache/jenkins
 ---> Running in e2ac37dd76cb
Removing intermediate container e2ac37dd76cb
 ---> 15239e8e0b44
Step 7/9 : USER jenkins
 ---> Running in b35d0eb94aa7
Removing intermediate container b35d0eb94aa7
 ---> 7abacfc170bf
Step 8/9 : ENV JAVA_OPTS="-Xmx8192m"
 ---> Running in c628aa8d82af
Removing intermediate container c628aa8d82af
 ---> 70943053c1f3
Step 9/9 : ENV JENKINS_OPTS="--handlerCountStartup=100 --handlerCountMax=300 --logfile=/var/log/jenkins/jenkins.log  --webroot=/var/cache/jenkins/war"
 ---> Running in 9f0e77fa9e68
Removing intermediate container 9f0e77fa9e68
 ---> a3f8781707a4
Successfully built a3f8781707a4


# cd ~/DockerJenkins/nginx
~/DockerJenkins/nginx# vi Dockerfile
FROM nginx
RUN rm /etc/nginx/conf.d/default.conf
EXPOSE 80
EXPOSE 443


# sudo apt-get -y install apache2-utils
# cd ~/DockerJenkins/nginx/
~/DockerJenkins/nginx# mkdir htpass
~/DockerJenkins/nginx# cd htpass/
~/DockerJenkins/nginx/htpass# htpasswd -c jenkins.password linoxide
New password: jenkins
Re-type new password: jenkins
Adding password for user linoxide



# cd ~/DockerJenkins/nginx/ssl
root@demohost:~/DockerJenkins/nginx/ssl# sudo openssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout demohost.key -out demohost.crt
Generating a 2048 bit RSA private key
..........................+++
..............+++
writing new private key to 'demohost.key'
-----
Country Name (2 letter code) [XX]:US
State or Province Name (full name) []:VA
Locality Name (eg, city) [Default City]:Alexandria
Organization Name (eg, company) [Default Company Ltd]:company
Organizational Unit Name (eg, section) []:section
Common Name (eg, your name or your server's hostname) []:host
Email Address []:mw@mycompany.com




# cd ~/DockerJenkins/nginx/
~/DockerJenkins/nginx# vi default.conf
daemon off;
user www-data;
pid /var/run/nginx.pid;
worker_processes 1;
events {
worker_connections 1024;
}
http {
# Basic Settings
sendfile on;
tcp_nopush on;
tcp_nodelay on;
keepalive_timeout 33;
types_hash_max_size 2048;
server_tokens off;
server_names_hash_bucket_size 64;
include /etc/nginx/mime.types;
default_type application/octet-stream;
# Logging Settings
access_log /var/log/nginx/access.log;
error_log /var/log/nginx/error.log;
# Gzip Settings
gzip on;
gzip_vary on;
gzip_proxied any;
gzip_comp_level 3;
gzip_buffers 16 8k;
gzip_http_version 1.1;
gzip_types text/plain text/xml text/css application/x-javascript application/json;
gzip_disable "MSIE [1-6]\.(?!.*SV1)";
# Virtual Host Configs

include /etc/nginx/sites-enabled/*;
# Error Page Config
#error_page 403 404 500 502 /srv/Splash;
}




~/Dockerjenkins/nginx# vi conf.d/jenkins.conf
server {
listen       80;
listen 443 ssl http2;
server_name  "demohost.com";
ssl_certificate /etc/nginx/ssl/demohost.crt;
ssl_certificate_key /etc/nginx/ssl/demohost.key;
ssl_session_timeout 1d;
ssl_session_cache shared:SSL:50m;
ssl_session_tickets off;
ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_ciphers 'ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-
AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:
ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-
GCM-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256:ECDHE-ECDSA-
AES128-SHAECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA:ECDHE-ECDSA-AES256-
SHA384:ECDHE-ECDSA-AES256-SHA:ECDHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA256:DHE-
RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES256-SHA:ECDHE-ECDSA-DES-CBC3-
SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES128-GCM-SHA256:AES256-
GCM-SHA384:AES128-SHA256:AES256-SHA256:AES128-SHA:AES256-SHA:DES-CBC3-SHA:!DSS';
ssl_prefer_server_ciphers on;
access_log on;
location / {
auth_basic "Restricted";
auth_basic_user_file /etc/nginx/htpass/jenkins.password;
proxy_pass         http://jenkins-master:8080;
proxy_set_header   Host             $host;
proxy_set_header   X-Real-IP        $remote_addr;
proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
proxy_set_header   X-Forwarded-Proto http;
proxy_max_temp_file_size 0;
proxy_connect_timeout      150;
proxy_send_timeout         100;
proxy_read_timeout         100;
proxy_buffer_size          8k;
proxy_buffers              4 32k;
proxy_busy_buffers_size    64k;
proxy_temp_file_write_size 64k;
}
}

# cd ~/DockerJenkins/nginx/
~/DockerJenkins/nginx# docker build .


NGINX         -> <none>              <none>              e0a4b5cdae63        6 seconds ago       109MB
Docker master -> <none>              <none>              a3f8781707a4        5 seconds ago       696MB
Docker Data   -> <none>              <none>              c14dd38f9fd8        2 minutes ago       115MB


~/DockerJenkins# vi docker-compose.yml
jenkinsdata:
 build: jenkins-data
jenkins-master:
 image: jenkins
 volumes_from:
  - jenkinsdata
 ports:
  - "50000:50000"
jenkinsnginx:
 image: nginx:latest
 ports:
  - "80:80"
  - "443:443"
 volumes:
  - ./nginx/default.conf:/etc/nginx/default.conf
  - ./nginx/conf.d:/etc/nginx/conf.d
  - ./nginx/logs:/var/log/nginx
  - ./nginx/ssl:/etc/nginx/ssl
  - ./nginx/htpass:/etc/nginx/htpass
 links:
  - jenkins-master:jenkins-master
  
  
~/DockerJenkins# docker-compose up -d

docker ps -a

root@demohost:~/DockerJenkins# docker inspect <f8d714da441a> | grep IPAddress
===============================================================================
Jenkins with HTTPS Using NGINX and Docker:
https://itnext.io/setting-up-https-for-jenkins-with-nginx-everything-in-docker-4a118dc29127
Setting up https on built-in Winstone webserver is not recommended by Jenkins. The alternate is to setup nginx reverse proxy


